Given a string of words, you need to find the highest scoring word.

Each letter of a word scores points according to its position in the alphabet: a = 1, b = 2, c = 3 etc.

You need to return the highest scoring word as a string.

If two words score the same, return the word that appears earliest in the original string.

All letters will be lowercase and all inputs will be valid.






using System;
using System.Collections.Generic;
using System.Linq;


public class Kata
{
  public static string High(string s)
  {
           var b = s.Split().ToArray();
            var c = b.Select(x=> x.Select(y=> (int)y - 96).ToArray().Sum()).ToArray();
            var d = b.Where((x,i )=> x.Select(y => (int)y - 96).ToArray().Sum() == c.Max() ).ToArray();
            if(d.Length > 1)
            {
                if(s.IndexOf(d[0]) < s.IndexOf(d[1])){
                    return d[0];
                }
                else
                {
                    return d[1];
                }
            }

           return string.Concat(d);
            
  }
}

